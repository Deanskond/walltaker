class Link < ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[Link, ActiveRecord_Relation, Integer]

  attr_accessor id(): Integer
  def id_changed?: () -> bool
  def id_change: () -> [ Integer?, Integer? ]
  def id_will_change!: () -> void
  def id_was: () -> Integer?
  def id_previously_changed?: () -> bool
  def id_previous_change: () -> Array[Integer?]?
  def id_previously_was: () -> Integer?
  def id_before_last_save: () -> Integer?
  def id_change_to_be_saved: () -> Array[Integer?]?
  def id_in_database: () -> Integer?
  def saved_change_to_id: () -> Array[Integer?]?
  def saved_change_to_id?: () -> bool
  def will_save_change_to_id?: () -> bool
  def restore_id!: () -> void
  def clear_id_change: () -> void

  attr_accessor expires(): ActiveSupport::TimeWithZone?
  def expires_changed?: () -> bool
  def expires_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]
  def expires_will_change!: () -> void
  def expires_was: () -> ActiveSupport::TimeWithZone?
  def expires_previously_changed?: () -> bool
  def expires_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?
  def expires_previously_was: () -> ActiveSupport::TimeWithZone?
  def expires_before_last_save: () -> ActiveSupport::TimeWithZone?
  def expires_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?
  def expires_in_database: () -> ActiveSupport::TimeWithZone?
  def saved_change_to_expires: () -> Array[ActiveSupport::TimeWithZone?]?
  def saved_change_to_expires?: () -> bool
  def will_save_change_to_expires?: () -> bool
  def restore_expires!: () -> void
  def clear_expires_change: () -> void

  attr_accessor user_id(): Integer
  def user_id_changed?: () -> bool
  def user_id_change: () -> [ Integer?, Integer? ]
  def user_id_will_change!: () -> void
  def user_id_was: () -> Integer?
  def user_id_previously_changed?: () -> bool
  def user_id_previous_change: () -> Array[Integer?]?
  def user_id_previously_was: () -> Integer?
  def user_id_before_last_save: () -> Integer?
  def user_id_change_to_be_saved: () -> Array[Integer?]?
  def user_id_in_database: () -> Integer?
  def saved_change_to_user_id: () -> Array[Integer?]?
  def saved_change_to_user_id?: () -> bool
  def will_save_change_to_user_id?: () -> bool
  def restore_user_id!: () -> void
  def clear_user_id_change: () -> void

  attr_accessor terms(): String?
  def terms_changed?: () -> bool
  def terms_change: () -> [ String?, String? ]
  def terms_will_change!: () -> void
  def terms_was: () -> String?
  def terms_previously_changed?: () -> bool
  def terms_previous_change: () -> Array[String?]?
  def terms_previously_was: () -> String?
  def terms_before_last_save: () -> String?
  def terms_change_to_be_saved: () -> Array[String?]?
  def terms_in_database: () -> String?
  def saved_change_to_terms: () -> Array[String?]?
  def saved_change_to_terms?: () -> bool
  def will_save_change_to_terms?: () -> bool
  def restore_terms!: () -> void
  def clear_terms_change: () -> void

  attr_accessor created_at(): ActiveSupport::TimeWithZone
  def created_at_changed?: () -> bool
  def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]
  def created_at_will_change!: () -> void
  def created_at_was: () -> ActiveSupport::TimeWithZone?
  def created_at_previously_changed?: () -> bool
  def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?
  def created_at_previously_was: () -> ActiveSupport::TimeWithZone?
  def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?
  def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?
  def created_at_in_database: () -> ActiveSupport::TimeWithZone?
  def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?
  def saved_change_to_created_at?: () -> bool
  def will_save_change_to_created_at?: () -> bool
  def restore_created_at!: () -> void
  def clear_created_at_change: () -> void

  attr_accessor updated_at(): ActiveSupport::TimeWithZone
  def updated_at_changed?: () -> bool
  def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]
  def updated_at_will_change!: () -> void
  def updated_at_was: () -> ActiveSupport::TimeWithZone?
  def updated_at_previously_changed?: () -> bool
  def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?
  def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?
  def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?
  def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?
  def updated_at_in_database: () -> ActiveSupport::TimeWithZone?
  def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?
  def saved_change_to_updated_at?: () -> bool
  def will_save_change_to_updated_at?: () -> bool
  def restore_updated_at!: () -> void
  def clear_updated_at_change: () -> void

  attr_accessor blacklist(): String?
  def blacklist_changed?: () -> bool
  def blacklist_change: () -> [ String?, String? ]
  def blacklist_will_change!: () -> void
  def blacklist_was: () -> String?
  def blacklist_previously_changed?: () -> bool
  def blacklist_previous_change: () -> Array[String?]?
  def blacklist_previously_was: () -> String?
  def blacklist_before_last_save: () -> String?
  def blacklist_change_to_be_saved: () -> Array[String?]?
  def blacklist_in_database: () -> String?
  def saved_change_to_blacklist: () -> Array[String?]?
  def saved_change_to_blacklist?: () -> bool
  def will_save_change_to_blacklist?: () -> bool
  def restore_blacklist!: () -> void
  def clear_blacklist_change: () -> void

  attr_accessor post_url(): String?
  def post_url_changed?: () -> bool
  def post_url_change: () -> [ String?, String? ]
  def post_url_will_change!: () -> void
  def post_url_was: () -> String?
  def post_url_previously_changed?: () -> bool
  def post_url_previous_change: () -> Array[String?]?
  def post_url_previously_was: () -> String?
  def post_url_before_last_save: () -> String?
  def post_url_change_to_be_saved: () -> Array[String?]?
  def post_url_in_database: () -> String?
  def saved_change_to_post_url: () -> Array[String?]?
  def saved_change_to_post_url?: () -> bool
  def will_save_change_to_post_url?: () -> bool
  def restore_post_url!: () -> void
  def clear_post_url_change: () -> void

  attr_accessor post_thumbnail_url(): String?
  def post_thumbnail_url_changed?: () -> bool
  def post_thumbnail_url_change: () -> [ String?, String? ]
  def post_thumbnail_url_will_change!: () -> void
  def post_thumbnail_url_was: () -> String?
  def post_thumbnail_url_previously_changed?: () -> bool
  def post_thumbnail_url_previous_change: () -> Array[String?]?
  def post_thumbnail_url_previously_was: () -> String?
  def post_thumbnail_url_before_last_save: () -> String?
  def post_thumbnail_url_change_to_be_saved: () -> Array[String?]?
  def post_thumbnail_url_in_database: () -> String?
  def saved_change_to_post_thumbnail_url: () -> Array[String?]?
  def saved_change_to_post_thumbnail_url?: () -> bool
  def will_save_change_to_post_thumbnail_url?: () -> bool
  def restore_post_thumbnail_url!: () -> void
  def clear_post_thumbnail_url_change: () -> void

  attr_accessor post_description(): String?
  def post_description_changed?: () -> bool
  def post_description_change: () -> [ String?, String? ]
  def post_description_will_change!: () -> void
  def post_description_was: () -> String?
  def post_description_previously_changed?: () -> bool
  def post_description_previous_change: () -> Array[String?]?
  def post_description_previously_was: () -> String?
  def post_description_before_last_save: () -> String?
  def post_description_change_to_be_saved: () -> Array[String?]?
  def post_description_in_database: () -> String?
  def saved_change_to_post_description: () -> Array[String?]?
  def saved_change_to_post_description?: () -> bool
  def will_save_change_to_post_description?: () -> bool
  def restore_post_description!: () -> void
  def clear_post_description_change: () -> void

  attr_accessor last_ping(): ActiveSupport::TimeWithZone?
  def last_ping_changed?: () -> bool
  def last_ping_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]
  def last_ping_will_change!: () -> void
  def last_ping_was: () -> ActiveSupport::TimeWithZone?
  def last_ping_previously_changed?: () -> bool
  def last_ping_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?
  def last_ping_previously_was: () -> ActiveSupport::TimeWithZone?
  def last_ping_before_last_save: () -> ActiveSupport::TimeWithZone?
  def last_ping_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?
  def last_ping_in_database: () -> ActiveSupport::TimeWithZone?
  def saved_change_to_last_ping: () -> Array[ActiveSupport::TimeWithZone?]?
  def saved_change_to_last_ping?: () -> bool
  def will_save_change_to_last_ping?: () -> bool
  def restore_last_ping!: () -> void
  def clear_last_ping_change: () -> void

  attr_accessor set_by_id(): Integer?
  def set_by_id_changed?: () -> bool
  def set_by_id_change: () -> [ Integer?, Integer? ]
  def set_by_id_will_change!: () -> void
  def set_by_id_was: () -> Integer?
  def set_by_id_previously_changed?: () -> bool
  def set_by_id_previous_change: () -> Array[Integer?]?
  def set_by_id_previously_was: () -> Integer?
  def set_by_id_before_last_save: () -> Integer?
  def set_by_id_change_to_be_saved: () -> Array[Integer?]?
  def set_by_id_in_database: () -> Integer?
  def saved_change_to_set_by_id: () -> Array[Integer?]?
  def saved_change_to_set_by_id?: () -> bool
  def will_save_change_to_set_by_id?: () -> bool
  def restore_set_by_id!: () -> void
  def clear_set_by_id_change: () -> void

  attr_accessor friends_only(): bool?
  def friends_only_changed?: () -> bool
  def friends_only_change: () -> [ bool?, bool? ]
  def friends_only_will_change!: () -> void
  def friends_only_was: () -> bool?
  def friends_only_previously_changed?: () -> bool
  def friends_only_previous_change: () -> Array[bool?]?
  def friends_only_previously_was: () -> bool?
  def friends_only_before_last_save: () -> bool?
  def friends_only_change_to_be_saved: () -> Array[bool?]?
  def friends_only_in_database: () -> bool?
  def saved_change_to_friends_only: () -> Array[bool?]?
  def saved_change_to_friends_only?: () -> bool
  def will_save_change_to_friends_only?: () -> bool
  def restore_friends_only!: () -> void
  def clear_friends_only_change: () -> void
  attr_accessor friends_only?(): bool

  attr_accessor last_ping_user_agent(): String?
  def last_ping_user_agent_changed?: () -> bool
  def last_ping_user_agent_change: () -> [ String?, String? ]
  def last_ping_user_agent_will_change!: () -> void
  def last_ping_user_agent_was: () -> String?
  def last_ping_user_agent_previously_changed?: () -> bool
  def last_ping_user_agent_previous_change: () -> Array[String?]?
  def last_ping_user_agent_previously_was: () -> String?
  def last_ping_user_agent_before_last_save: () -> String?
  def last_ping_user_agent_change_to_be_saved: () -> Array[String?]?
  def last_ping_user_agent_in_database: () -> String?
  def saved_change_to_last_ping_user_agent: () -> Array[String?]?
  def saved_change_to_last_ping_user_agent?: () -> bool
  def will_save_change_to_last_ping_user_agent?: () -> bool
  def restore_last_ping_user_agent!: () -> void
  def clear_last_ping_user_agent_change: () -> void

  attr_accessor never_expires(): bool?
  def never_expires_changed?: () -> bool
  def never_expires_change: () -> [ bool?, bool? ]
  def never_expires_will_change!: () -> void
  def never_expires_was: () -> bool?
  def never_expires_previously_changed?: () -> bool
  def never_expires_previous_change: () -> Array[bool?]?
  def never_expires_previously_was: () -> bool?
  def never_expires_before_last_save: () -> bool?
  def never_expires_change_to_be_saved: () -> Array[bool?]?
  def never_expires_in_database: () -> bool?
  def saved_change_to_never_expires: () -> Array[bool?]?
  def saved_change_to_never_expires?: () -> bool
  def will_save_change_to_never_expires?: () -> bool
  def restore_never_expires!: () -> void
  def clear_never_expires_change: () -> void
  attr_accessor never_expires?(): bool

  def past_links: () -> PastLink::ActiveRecord_Associations_CollectionProxy
  def past_links=: (PastLink::ActiveRecord_Associations_CollectionProxy | Array[PastLink]) -> (PastLink::ActiveRecord_Associations_CollectionProxy | Array[PastLink])
  def past_link_ids: () -> Array[Integer]
  def past_link_ids=: (Array[Integer]) -> Array[Integer]

  def user: () -> User
  def user=: (User?) -> User?
  def reload_user: () -> User?
  def build_user: (untyped) -> User
  def create_user: (untyped) -> User
  def create_user!: (untyped) -> User

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Link, Integer]
    include Enumerable[Link]
  end

  class ActiveRecord_Associations_CollectionProxy < ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Link, Integer]
  end
end
